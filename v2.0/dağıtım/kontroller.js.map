{"version":3,"sources":["..\\kütüphane\\işleyiciler\\kontroller.js"],"names":["kontroller","veri","geriCagirma","uygunMetotlar","indexOf","metot","metotlar","bilgi","post","protokol","yükler","url","trim","length","başarıKodları","Array","zamanAşımı","belirteç","başlıklar","belirtec","hata","belirteçVerisi","telefonNo","kullanıcıVerisi","kullanıcıKontrolKimlikleri","kontrolKimlikleri","enFazlaKontrol","kontrolKimliği","kimlikUzunluğu","kontrolObjesi","kimlik","push","get","sorguDizgisiObjeleri","kontrolVerisi","belirteçler","belirteçOnaylama","belirteçOnaylandıMı","put","delete","kontrolKimliğiPozisyonu","splice"],"mappings":"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","file":"kontroller.js","sourcesContent":["/**\n * Yönlendirici ile çalıştıran kontrol işlemleri işleyicisi\n * * Kullanım Şekli: localhost:3000/kontroller\n */\n\nimport belirteçler from \"./belirteçler\";\nimport { oku, oluştur, güncelle, sil } from \"./../veri\";\nimport { enFazlaKontrol, kimlikUzunluğu } from \"./../yapılandırma\";\nimport { rastgeleDizgiOluştur } from \"./../yardımcılar\";\n\nconst kontroller = (veri, geriCagirma) => {\n  var uygunMetotlar = [\"post\", \"get\", \"put\", \"delete\"];\n\n  if (uygunMetotlar.indexOf(veri.metot) > -1) {\n    metotlar[veri.metot](veri, geriCagirma);\n  } else {\n    geriCagirma(405, { bilgi: \"Kontrol işlemleri için metot uygun değil :(\" });\n  }\n};\n\nconst metotlar = {};\n\n/**\n * Kontrol oluşturma metodu\n * * Gerekli veriler: *Protokol, url, metot, başarı kodları, zaman aşımı*\n * * Kullanım şekli: *Yükler ile kullanılır (Body içindeki JSON verileri) (localhost:3000/kontroller)*\n * @param {object} veri Index.js\"te tanımlanan veri objesi. İstekle gelir.\n * @param {function(number, object):void} geriCagirma İşlemler bittiği zaman verilen yanıt\n ** arg0: HTTP varsayılan durum kodları\n ** arg1: Ek bilgiler, açıklamalar\n */\nmetotlar.post = (veri, geriCagirma) => {\n  // Gerekli veriler\n  var protokol =\n    typeof veri.yükler.protokol == \"string\" &&\n    [\"http\", \"https\"].indexOf(veri.yükler.protokol) > -1\n      ? veri.yükler.protokol\n      : false;\n\n  var url =\n    typeof veri.yükler.url == \"string\" && veri.yükler.url.trim().length > 0\n      ? veri.yükler.url.trim()\n      : false;\n\n  var metot =\n    typeof veri.yükler.metot == \"string\" &&\n    [\"post\", \"get\", \"put\", \"delete\"].indexOf(veri.yükler.metot) > -1\n      ? veri.yükler.metot\n      : false;\n\n  var başarıKodları =\n    typeof veri.yükler.başarıKodları == \"object\" &&\n    veri.yükler.başarıKodları instanceof Array &&\n    veri.yükler.başarıKodları.length > 0\n      ? veri.yükler.başarıKodları\n      : false;\n\n  var zamanAşımı =\n    typeof veri.yükler.zamanAşımı == \"number\" &&\n    veri.yükler.zamanAşımı % 1 === 0 && // (?)\n    veri.yükler.zamanAşımı >= 1 &&\n    veri.yükler.zamanAşımı <= 5\n      ? veri.yükler.zamanAşımı\n      : false;\n\n  if (protokol && url && metot && başarıKodları && zamanAşımı) {\n    // Sadece tanınmış kullanıclar kontrol yapabilsin diye belirtece bakıyoruz.\n    var belirteç =\n      typeof veri.başlıklar.belirtec == \"string\"\n        ? veri.başlıklar.belirtec\n        : false;\n\n    if (belirteç) {\n      oku(\"belirteçler\", belirteç, (hata, belirteçVerisi) => {\n        if (!hata && belirteçVerisi) {\n          var telefonNo = belirteçVerisi.telefonNo;\n\n          oku(\"kullanıcılar\", telefonNo, (hata, kullanıcıVerisi) => {\n            if (!hata && kullanıcıVerisi) {\n              var kullanıcıKontrolKimlikleri =\n                typeof kullanıcıVerisi.kontrolKimlikleri == \"object\" &&\n                kullanıcıVerisi.kontrolKimlikleri instanceof Array\n                  ? kullanıcıVerisi.kontrolKimlikleri\n                  : [];\n\n              // Kullanıcının kontrol hakkının olup olmadığı kontrol ediliyor.\n              if (kullanıcıKontrolKimlikleri.length < enFazlaKontrol) {\n                // Rastgele kontrol kimliği oluşturuyoruz.\n                var kontrolKimliği = rastgeleDizgiOluştur(kimlikUzunluğu);\n\n                // Adress çubuğuna yazıldığı için (Sorgu Verisi), kimlik türkçe karakter içeremez.\n                var kontrolObjesi = {\n                  kimlik: kontrolKimliği,\n                  telefonNo: telefonNo,\n                  protokol: protokol,\n                  url: url,\n                  metot: metot,\n                  başarıKodları: başarıKodları,\n                  zamanAşımı: zamanAşımı\n                };\n\n                oluştur(\"kontroller\", kontrolKimliği, kontrolObjesi, hata => {\n                  if (!hata) {\n                    // İlk başta boş olduğundan, atama yapmamız gerekebilir. (?) [Array mi değil mi belli değil.]\n                    kullanıcıVerisi.kontrolKimlikleri = kullanıcıKontrolKimlikleri;\n                    kullanıcıVerisi.kontrolKimlikleri.push(kontrolKimliği);\n\n                    güncelle(\n                      \"kullanıcılar\",\n                      telefonNo,\n                      kullanıcıVerisi,\n                      hata => {\n                        if (!hata) {\n                          geriCagirma(200, kontrolObjesi);\n                        } else {\n                          geriCagirma(500, {\n                            bilgi: \"Kullanıcı kontrol objesi güncellenemedi :(\"\n                          });\n                        }\n                      }\n                    );\n                  } else {\n                    geriCagirma(500, { bilgi: \"Kontrol oluşturulamadı :(\" });\n                  }\n                });\n              } else {\n                geriCagirma(400, {\n                  bilgi:\n                    \"Bütün kontrol hakklarını (\" +\n                    enFazlaKontrol +\n                    \") kullanmış bulunmaktasın :(\"\n                });\n              }\n            } else {\n              geriCagirma(403, {\n                bilgi:\n                  \"Kontrol işlemi (post) için kullanıcı düzgün okunamadı :(\"\n              });\n            }\n          });\n        } else {\n          geriCagirma(403, {\n            bilgi:\n              \"Kontrol işlemi (post) için gerekli belirteç düzgün okunamadı :(\"\n          });\n        }\n      });\n    } else {\n      geriCagirma(400, {\n        bilgi:\n          \"Kontrol işlemi (post) yapabilmek için tanınmış bir kullanıcı değilsiniz :(\"\n      });\n    }\n  } else {\n    geriCagirma(400, {\n      bilgi: \"Kontrol işlemi (post) için gerekli alanlar hatalı veya eksik :(\"\n    });\n  }\n};\n\n/**\n * Kontrol alma metodu\n *\n * * Gerekli veriler: *Kimlik*\n * * Kullanım şekli: *localhost:3000/kontroller?kimlik=... (Sorgu Verisi)*\n * @param {object} veri Index.js\"te tanımlanan veri objesi. İstekle gelir.\n * @param {function(number, object):void} geriCagirma İşlemler bittiği zaman verilen yanıt\n ** arg0: HTTP varsayılan durum kodları\n ** arg1: Ek bilgiler, açıklamalar\n */\nmetotlar.get = (veri, geriCagirma) => {\n  // Gerekli veriler\n  var kimlik =\n    typeof veri.sorguDizgisiObjeleri.kimlik == \"string\" &&\n    veri.sorguDizgisiObjeleri.kimlik.trim().length == kimlikUzunluğu\n      ? veri.sorguDizgisiObjeleri.kimlik.trim()\n      : false;\n\n  if (kimlik) {\n    oku(\"kontroller\", kimlik, (hata, kontrolVerisi) => {\n      if (!hata && kontrolVerisi) {\n        var belirteç =\n          typeof veri.başlıklar.belirtec == \"string\"\n            ? veri.başlıklar.belirtec\n            : false;\n\n        belirteçler.belirteçOnaylama(\n          belirteç,\n          kontrolVerisi.telefonNo,\n          belirteçOnaylandıMı => {\n            if (belirteçOnaylandıMı) {\n              geriCagirma(200, kontrolVerisi);\n            } else {\n              geriCagirma(200, {\n                bilgi: \"Kontrol alma işlemi için belirteç onaylanamadı :(\"\n              });\n            }\n          }\n        );\n      } else {\n        geriCagirma(404, { bilgi: \"Kontrol bulunamadı veya hata oluştu :(\" });\n      }\n    });\n  } else {\n    geriCagirma(200, {\n      bilgi: \"Gereken kimlik bilgisi eksik :(\"\n    });\n  }\n};\n\n/**\n * Kontrol güncelleme metodu\n * * Gerekli veriler: *Kimlik*\n * * İsteğe bağlı veriler: *Protokol, url, metot, başarı kodları, zaman aşımı*\n * * Kullanım şekli: *Yükler ile kullanılır (Body içindeki JSON verileri) (localhost:3000/kontroller)*\n * @param {object} veri Index.js\"te tanımlanan veri objesi. İstekle gelir.\n * @param {function(number, object):void} geriCagirma İşlemler bittiği zaman verilen yanıt\n ** arg0: HTTP varsayılan durum kodları\n ** arg1: Ek bilgiler, açıklamalar\n */\nmetotlar.put = (veri, geriCagirma) => {\n  // Gerekli veriler\n  var kimlik =\n    typeof veri.yükler.kimlik == \"string\" &&\n    veri.yükler.kimlik.trim().length == kimlikUzunluğu\n      ? veri.yükler.kimlik.trim()\n      : false;\n\n  // İsteğe bağlı veriler\n  var protokol =\n    typeof veri.yükler.protokol == \"string\" &&\n    [\"http\", \"https\"].indexOf(veri.yükler.protokol) > -1\n      ? veri.yükler.protokol\n      : false;\n  var url =\n    typeof veri.yükler.url == \"string\" && veri.yükler.url.trim().length > 0\n      ? veri.yükler.url.trim()\n      : false;\n  var metot =\n    typeof veri.yükler.metot == \"string\" &&\n    [\"post\", \"get\", \"put\", \"delete\"].indexOf(veri.yükler.metot) > -1\n      ? veri.yükler.metot\n      : false;\n  var başarıKodları =\n    typeof veri.yükler.başarıKodları == \"object\" &&\n    veri.yükler.başarıKodları instanceof Array &&\n    veri.yükler.başarıKodları.length > 0\n      ? veri.yükler.başarıKodları\n      : false;\n  var zamanAşımı =\n    typeof veri.yükler.zamanAşımı == \"number\" &&\n    veri.yükler.zamanAşımı % 1 === 0 && // (?)\n    veri.yükler.zamanAşımı >= 1 &&\n    veri.yükler.zamanAşımı <= 5\n      ? veri.yükler.zamanAşımı\n      : false;\n\n  // Eğer gerekli bilgiler verilmemişse hata vereceğiz.\n  if (kimlik) {\n    // İsteğe bağlı veriler yoksa, hata vereceğiz.\n    if (protokol || url || metot || başarıKodları || zamanAşımı) {\n      oku(\"kontroller\", kimlik, (hata, kontrolVerisi) => {\n        if (!hata && kontrolVerisi) {\n          var belirteç =\n            typeof veri.başlıklar.belirtec == \"string\"\n              ? veri.başlıklar.belirtec\n              : false;\n\n          belirteçler.belirteçOnaylama(\n            belirteç,\n            kontrolVerisi.telefonNo,\n            belirteçOnaylandıMı => {\n              if (belirteçOnaylandıMı) {\n                // Gereken kontrolleri güncelleme\n                if (protokol) {\n                  kontrolVerisi.protokol = protokol;\n                }\n                if (url) {\n                  kontrolVerisi.url = url;\n                }\n                if (metot) {\n                  kontrolVerisi.metot = metot;\n                }\n                if (başarıKodları) {\n                  kontrolVerisi.başarıKodları = başarıKodları;\n                }\n                if (zamanAşımı) {\n                  kontrolVerisi.zamanAşımı = zamanAşımı;\n                }\n\n                // Yenilikleri kaydetme\n                güncelle(\"kontroller\", kimlik, kontrolVerisi, hata => {\n                  if (!hata) {\n                    geriCagirma(200, { bilgi: \"Kontrol bilgisi güncellendi :)\"});\n                  } else {\n                    geriCagirma(500, {\n                      bilgi:\n                        \"Kontrol güncelleme işleminde hata meydana geldi :(\"\n                    });\n                  }\n                });\n              } else {\n                geriCagirma(403, {\n                  bilgi:\n                    \"Kontrol güncelleme işlemi için belirteç onaylanmadı :(\"\n                });\n              }\n            }\n          );\n        } else {\n          geriCagirma(400, {\n            bilgi: \"Kontrol güncelleme işlemi için no mevcut değil :(\"\n          });\n        }\n      });\n    } else {\n      geriCagirma(400, {\n        bilgi: \"Kontrol güncelleme işlemi için güncellenecek veriler mevcut değil :(\"\n      });\n    }\n  } else {\n    geriCagirma(400, {\n      bilgi: \"Kontrol güncelleme işlemi için gerekli alanlar eksik :(\"\n    });\n  }\n};\n\n/**\n * Kontrol silme metodu\n * * Gerekli veriler: *Kimlik*\n * * Kullanım Şekli: *localhost:3000/kontroller?kimlik=... (Sorgu Verisi)*\n * @param {object} veri Index.js\"te tanımlanan veri objesi. İstekle gelir.\n * @param {function(number, object):void} geriCagirma İşlemler bittiği zaman verilen yanıt\n ** arg0: HTTP varsayılan durum kodları\n ** arg1: Ek bilgiler, açıklamalar\n */\nmetotlar.delete = (veri, geriCagirma) => {\n  // Gerekli veriler\n  // (trim işlemi dizgideki boşlukları kırpar.)\n  var kimlik =\n    typeof veri.sorguDizgisiObjeleri.kimlik == \"string\" &&\n    veri.sorguDizgisiObjeleri.kimlik.trim().length == kimlikUzunluğu\n      ? veri.sorguDizgisiObjeleri.kimlik\n      : false;\n\n  if (kimlik) {\n    // Kimliği kontrol etmek amaçlı okuyoruz\n    oku(\"kontroller\", kimlik, (hata, kontrolVerisi) => {\n      if (!hata && kontrolVerisi) {\n        // Kullanıcı doğrulama işlemi\n        var belirteç =\n          typeof veri.başlıklar.belirtec == \"string\"\n            ? veri.başlıklar.belirtec\n            : false;\n\n        belirteçler.belirteçOnaylama(\n          belirteç,\n          kontrolVerisi.telefonNo,\n          belirteçOnaylandıMı => {\n            if (belirteçOnaylandıMı) {\n              // Kontrol verisi siliyoruz.\n              sil(\"kontroller\", kimlik, hata => {\n                if (!hata) {\n                  // Kullanıcının kontrol kimlikleri güncellenmeli\n                  oku(\n                    \"kullanıcılar\",\n                    kontrolVerisi.telefonNo,\n                    (hata, kullanıcıVerisi) => {\n                      if (!hata && kullanıcıVerisi) {\n                        // Kullanıcının kontrollerinin kimlik bilgilerini alıyoruz.\n                        var kullanıcıKontrolKimlikleri =\n                          typeof kullanıcıVerisi.kontrolKimlikleri ==\n                            \"object\" &&\n                          kullanıcıVerisi.kontrolKimlikleri instanceof Array\n                            ? kullanıcıVerisi.kontrolKimlikleri\n                            : [];\n\n                        // Kullanıcı verisideki silinen kontrol kimliğinin pozisyonunu alıyoruz.\n                        var kontrolKimliğiPozisyonu = kullanıcıVerisi.kontrolKimlikleri.indexOf(\n                          kimlik\n                        );\n\n                        if (kontrolKimliğiPozisyonu > -1) {\n                          // Kontrol kimliğini siliyoruz.\n                          kullanıcıKontrolKimlikleri.splice(\n                            kontrolKimliğiPozisyonu,\n                            1\n                          );\n\n                          // Kullanıcı kontrol kimliği objesini güncelliyoruz.\n                          kullanıcıVerisi.kontrolKimlikleri = kullanıcıKontrolKimlikleri;\n\n                          güncelle(\n                            \"kullanıcılar\",\n                            kontrolVerisi.telefonNo,\n                            kullanıcıVerisi,\n                            hata => {\n                              if (!hata) {\n                                geriCagirma(200, {\n                                  bilgi: \"Kontrol başarıyla silindi :)\"\n                                });\n                              } else {\n                                geriCagirma(500, {\n                                  bilgi: \"Kullanıcı güncellenemedi :(\"\n                                });\n                              }\n                            }\n                          );\n                        } else {\n                          geriCagirma(500, {\n                            bilgi:\n                              \"Silinen kontrol verisinin bilgisi kullanıcıda bulunamadı \" +\n                              \" bu sebeple silinemedi :(\"\n                          });\n                        }\n                      } else {\n                        geriCagirma(500, {\n                          bilgi:\n                            \"Kontrol verisi silinen kullanıcı bulunamadı. Bu sebeple kullanıcı \" +\n                            \"kontrol verileri güncellenemedi  :(\"\n                        });\n                      }\n                    }\n                  );\n                } else {\n                  geriCagirma(500, {\n                    bilgi: \"Kontrol verisi silme işleminde hata oluştu :(\"\n                  });\n                }\n              });\n            } else {\n              geriCagirma(403, {\n                bilgi: \"Doğrulanmış bir kullanıcı değilsiniz :(\"\n              });\n            }\n          }\n        );\n      } else {\n        geriCagirma(400, { bilgi: \"Kimlik bulunamadı :(\" });\n      }\n    });\n  } else {\n    geriCagirma(400, { bilgi: \"Kimlik geçerli değil :(\" });\n  }\n};\n\nexport default kontroller;\n"]}