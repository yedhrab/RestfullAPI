{"version":3,"sources":["..\\..\\..\\kütüphane\\işleyiciler\\kullanıcılar.js"],"names":["kullanıcılar","veri","geriCagirma","uygunMetotlar","indexOf","metot","metotlar","Hata","Metot","post","isim","yükler","trim","length","soyİsim","telefonNo","şifre","koşulKabulü","hata","gizlenmişŞifre","kullanıcıObjesi","bilgi","get","sorguDizgisiObjeleri","belirteç","başlıklar","belirtec","belirteçler","belirteçOnaylama","belirteçOnaylandıMı","put","kullanıcıVerisi","delete"],"mappings":"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","file":"kullanıcılar.js","sourcesContent":["/**\n * Kullanıcı işlemleri için kullanılır\n * @author Yunus Emre\n */\n\n/**\n * Bağımlılıklar\n * * belirteçler; Kullanıcı sisteme giriş yapmış mı kontrolü için kullanılıyor.\n */\nimport belirteçler from \"./belirteçler\";\nimport { oku, oluştur, güncelle, sil } from \"./../veri\";\nimport { şifreleme } from \"./../yardımcılar\";\n\n/**\n * İşleyiciler, kullanıcı işlemleri için metot\n * Örnek: localhost:3000/kullanicilar yazıldığında bu fonksiyon çalışır.\n *\n * Not: metotlar; private oluyor, dışarıdan erişilemez.\n *\n * @param {object} veri Index.js\"te tanımlanan veri objesidir. İstekle gelir.\n * @param {function(number, object):void} geriCagirma İşlemler bittiği zaman verilen yanıt\n ** arg0: HTTP varsayılan durum kodları\n ** arg1: Ek bilgiler, açıklamalar\n */\n\nconst kullanıcılar = (veri, geriCagirma) => {\n  var uygunMetotlar = [\"post\", \"get\", \"put\", \"delete\"];\n\n  if (uygunMetotlar.indexOf(veri.metot) > -1) {\n    metotlar[veri.metot](veri, geriCagirma);\n  } else {\n    geriCagirma(405, {\n      Hata: \"HTML isteklerinin metodu uygun değil\",\n      Metot: \"isleyiciler.kullanıcılar\"\n    });\n  }\n};\n\n/**\n * İşleyiciler.kullanıclar için kullanılan obje\n * @see kullanicilar\n */\nconst metotlar = {};\n\n/**\n * Kullanıcı oluşturma metodu\n * * Gerekli Veriler: *İsim, soy isim, telefon no, şifre, koşul kabulü*\n * * Not: *telefonNo* kimlik yerine kullanılmaktadır.\n * * Kullanım şekli: *Yükler ile kullanılır (Body içindeki JSON verileri) (localhost:3000/kullanicilar)*\n * @param {object} veri Index.js\"te tanımlanan veri objesi. İstekle gelir.\n * @param {function(number, object):void} geriCagirma İşlemler bittiği zaman verilen yanıt\n ** arg0: HTTP varsayılan durum kodları\n ** arg1: Ek bilgiler, açıklamalar\n */\nmetotlar.post = (veri, geriCagirma) => {\n  // İsim alma, 0 karakterden fazla olmalı\n  var isim =\n    typeof veri.yükler.isim == \"string\" && veri.yükler.isim.trim().length > 0\n      ? veri.yükler.isim.trim()\n      : false;\n\n  // Soyad alma, 0 karakterden fazla olmalı\n  var soyİsim =\n    typeof veri.yükler.soyİsim == \"string\" && veri.yükler.isim.trim().length > 0\n      ? veri.yükler.soyİsim.trim()\n      : false;\n\n  // telefonNo bilgisi alma. telefonNolar 10 haneli olur.\n  var telefonNo =\n    typeof veri.yükler.telefonNo == \"string\" &&\n    veri.yükler.telefonNo.trim().length == 10\n      ? veri.yükler.telefonNo.trim()\n      : false;\n\n  // Şifre alma\n  var şifre =\n    typeof veri.yükler.şifre == \"string\" && veri.yükler.isim.trim().length > 0\n      ? veri.yükler.şifre.trim()\n      : false;\n\n  // Koşulları kabul etti mi kontrolü\n  var koşulKabulü =\n    typeof veri.yükler.koşulKabulü == \"boolean\" &&\n    veri.yükler.koşulKabulü == true\n      ? true\n      : false;\n\n  if (isim && soyİsim && telefonNo && şifre && koşulKabulü) {\n    // Kullanıcının zaten olmadığından emin oluyoruz\n    oku(\"kullanıcılar\", telefonNo, hata => {\n      // Eğer kullanıcı dosyasında istenen telefonNo no bulunmaz ise, hata verir. Yani kullanıcı yoksa;\n      if (hata) {\n        // Şifreyi şifreleyerek (hashing) tutuyoruz.\n        var gizlenmişŞifre = şifreleme(şifre);\n\n        if (gizlenmişŞifre) {\n          // Kimlik (telefonNo) türkçe karakter içeremez, çünkü adres çubuğundan değer ile çağırılmaktadır. (sorguDizgisi)\n          var kullanıcıObjesi = {\n            isim: isim,\n            soyİsim: soyİsim,\n            telefonNo: telefonNo,\n            gizlenmişŞifre: gizlenmişŞifre,\n            koşulKabulü: koşulKabulü\n          };\n\n          oluştur(\"kullanıcılar\", telefonNo, kullanıcıObjesi, hata => {\n            if (!hata) {\n              geriCagirma(200, { bilgi: \"Kullanıcı oluşturuldu :)\"});\n            } else {\n              geriCagirma(500, { bilgi: \"Kullanıcı oluşturulamadı :(\" });\n            }\n          });\n        } else {\n          geriCagirma(500, { bilgi: \"Kullanıcı şifrelenemedi :(\" });\n        }\n      } else {\n        geriCagirma(400, { bilgi: \"Bu telefonNo numarası zaten kayıtlı :(\" });\n      }\n    });\n  } else {\n    geriCagirma(400, { bilgi: \"İstenen alanlarda eksiklikler var :(\" });\n  }\n};\n\n/**\n * Kullanıcı girişi\n * * Gerekli Veriler: *Telefon no*\n * * Not: *Sadece kimliği onaylanmış kişiler, kendi biligilerine erişebilir. (Diğerlerine erişemez)*\n * * Kullanım Şekli: *localhost:3000/kullanıcılar?telefonNo=... (Sorgu Verisi)*\n * @param {object} veri Index.js\"te tanımlanan veri objesi. İstekle gelir.\n * @param {function(number, object):void} geriCagirma İşlemler bittiği zaman verilen yanıt\n ** arg0: HTTP varsayılan durum kodları\n ** arg1: Ek bilgiler, açıklamalar\n */\nmetotlar.get = (veri, geriCagirma) => {\n  // telefonNo numarasını kontrol etmemiz gerekmekte\n  var telefonNo =\n    typeof veri.sorguDizgisiObjeleri.telefonNo == \"string\" &&\n    veri.sorguDizgisiObjeleri.telefonNo.trim().length == 10\n      ? veri.sorguDizgisiObjeleri.telefonNo.trim()\n      : false;\n\n  if (telefonNo) {\n    // Bilgilere erişmek isteyen kişinin kendimiz olduğunu anlamak için gereken işlemler.\n    var belirteç =\n      typeof veri.başlıklar.belirtec == \"string\"\n        ? veri.başlıklar.belirtec\n        : false;\n\n    belirteçler.belirteçOnaylama(belirteç, telefonNo, belirteçOnaylandıMı => {\n      if (belirteçOnaylandıMı) {\n        oku(\"kullanıcılar\", telefonNo, (hata, veri) => {\n          if (!hata && veri) {\n            // Gizlenmiş şifreyi, veriyi isteyene vermeden önce kaldırıyoruz.\n            delete veri.gizlenmişŞifre;\n\n            // Durum kodu ve yükleri gönderiyoruz. (Index.js\"teki seçilmişİşleyici)\n            geriCagirma(200, veri);\n          } else {\n            geriCagirma(404, { bilgi: \"Gösterilecek kullanıcı bulunamadı :(\" });\n          }\n        });\n      } else {\n        geriCagirma(400, {\n          bilgi:\n            \"Kullanıcı görme işlemi için belirteç onaylanmadı veya belirtecin ömrü bitmiş :(\"\n        });\n      }\n    });\n  } else {\n    geriCagirma(400, {\n      bilgi: \"Kullanıcı görme işlemi için gerekli bilgi bulunmadı :(\"\n    });\n  }\n};\n\n/**\n * Kullanıcı verileri güncelleme\n * * Not: *Sadece kimliği onaylanmış kişiler, kendi bilgilerini değiştirebilir. (Diğerlerine erişemez)*\n * * Kullanım şekli: *Yükler ile kullanılır (Body içindeki JSON verileri) (localhost:3000/kullanicilar)*\n * @param {object} veri Index.js\"te tanımlanan veri objesi. İstekle gelir.\n * @param {function(number, object):void} geriCagirma İşlemler bittiği zaman verilen yanıt\n ** arg0: HTTP varsayılan durum kodları\n ** arg1: Ek bilgiler, açıklamalar\n */\nmetotlar.put = (veri, geriCagirma) => {\n  // Kullanıcıyı kontrol etme\n  // Not: === yerine == kullanıyoruz, detaylı kontrol etmeye gerek yok.\n  var telefonNo =\n    typeof veri.yükler.telefonNo == \"string\" &&\n    veri.yükler.telefonNo.trim().length == 10\n      ? veri.yükler.telefonNo.trim()\n      : false;\n\n  // İsim alma, 0 karakterden fazla olmalı\n  var isim =\n    typeof veri.yükler.isim == \"string\" && veri.yükler.isim.trim().length > 0\n      ? veri.yükler.isim.trim()\n      : false;\n  // Soyad alma, 0 karakterden fazla olmalı\n  var soyİsim =\n    typeof veri.yükler.soyİsim == \"string\" && veri.yükler.isim.trim().length > 0\n      ? veri.yükler.soyİsim.trim()\n      : false;\n  // Şifre alma\n  var şifre =\n    typeof veri.yükler.şifre == \"string\" && veri.yükler.isim.trim().length > 0\n      ? veri.yükler.şifre.trim()\n      : false;\n\n  if (telefonNo) {\n    if (isim || soyİsim || şifre) {\n      // Kulanıcının giren kişinin kendi hesabı olduğundan emin oluyoruz.\n      var belirteç =\n        typeof veri.başlıklar.belirtec == \"string\"\n          ? veri.başlıklar.belirtec\n          : false;\n\n      belirteçler.belirteçOnaylama(belirteç, telefonNo, belirteçOnaylandıMı => {\n        if (belirteçOnaylandıMı) {\n          oku(\"kullanıcılar\", telefonNo, (hata, kullanıcıVerisi) => {\n            if (!hata && kullanıcıVerisi) {\n              if (isim) {\n                kullanıcıVerisi.isim = isim;\n              }\n              if (soyİsim) {\n                kullanıcıVerisi.soyİsim = soyİsim;\n              }\n              if (şifre) {\n                kullanıcıVerisi.gizlenmişŞifre = şifreleme(şifre);\n              }\n\n              güncelle(\"kullanıcılar\", telefonNo, kullanıcıVerisi, hata => {\n                if (!hata) {\n                  geriCagirma(200, { bilgi: \"Kullanıcı güncellendi :)\" });\n                } else {\n                  geriCagirma(500, { bilgi: \"Kulanıcı güncellenemedi :(\" });\n                }\n              });\n            } else {\n              geriCagirma(400, { bilgi: \"Kullanıcı bulunamadı :(\" });\n            }\n          });\n        } else {\n          geriCagirma(403, {\n            bilgi:\n              \"Kullanıcı güncellemek için belirteç bulunamadı veya belirtecin ömrü bitmiş :(\"\n          });\n        }\n      });\n    } else {\n      geriCagirma(400, { bilgi: \"Güncelleme için girilen bilgiler eksik :(\" });\n    }\n  } else {\n    geriCagirma(400, { bilgi: \"Güncelleme için gerekli bilgiler eksik :(\" });\n  }\n};\n\n/**\n * Kullanıcı verileri güncelleme\n * * Gerekli Veriler: \"Telefon no\"\n * * Not: *Sadece kimliği onaylanmış kişiler, kendi bilgilerini değiştirebilir. (Diğerlerine erişemez)*\n * * Kullanım Şekli: *localhost:3000/kullanıcılar?telefonNo=... (Sorgu Verisi)*\n * @param {object} veri Index.js\"te tanımlanan veri objesi. İstekle gelir.\n * @param {function(number, object):void} geriCagirma İşlemler bittiği zaman verilen yanıt\n ** arg0: HTTP varsayılan durum kodları\n ** arg1: Ek bilgiler, açıklamalar\n */\nmetotlar.delete = (veri, geriCagirma) => {\n  // Kullanıcının olduğunu kontrol ediyoruz.\n  var telefonNo =\n    typeof veri.sorguDizgisiObjeleri.telefonNo == \"string\" &&\n    veri.sorguDizgisiObjeleri.telefonNo.trim().length == 10\n      ? veri.sorguDizgisiObjeleri.telefonNo\n      : false;\n\n  if (telefonNo) {\n    var belirteç =\n      typeof veri.başlıklar.belirtec == \"string\"\n        ? veri.başlıklar.belirtec\n        : false;\n\n    belirteçler.belirteçOnaylama(belirteç, telefonNo, belirteçOnaylandıMı => {\n      if (belirteçOnaylandıMı) {\n        oku(\"kullanıcılar\", telefonNo, hata => {\n          if (!hata) {\n            sil(\"kullanıcılar\", telefonNo, hata => {\n              if (!hata) {\n                geriCagirma(200, { bilgi: \"İstenen kullanıcı silindi :)\" });\n              } else {\n                geriCagirma(500, { bilgi: \"Kullanıcı silinemedi :(\" });\n              }\n            });\n          } else {\n            geriCagirma(400, { bilgi: \"Silenecek kullanıcı bulunamadı :(\" });\n          }\n        });\n      } else {\n        geriCagirma(403, {\n          bilgi:\n            \"Kullanıcı silmek için belirteç bulunamadı veya belirtecin ömrü bitmiş :(\"\n        });\n      }\n    });\n  } else {\n    geriCagirma(400, {\n      bilgi: \"Kullanıcı silmek için gereken bilgiler eksik :(\"\n    });\n  }\n};\n\nexport default kullanıcılar;\n"]}